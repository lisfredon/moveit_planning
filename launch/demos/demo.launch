<launch>
  <!-- Robot Ã  utiliser : panda ou pr2 -->
  <arg name="robot_type" default="panda"/>



  <!-- ============================= -->
  <!-- Section PR2 -->
  <!-- ============================= -->
  <group if="$(eval arg('robot_type') == 'pr2')">
    <arg name="db" default="false" />
    <arg name="debug" default="false" />

    <arg name="use_rviz" default="true" />
    <arg name="use_gui" default="false" />
    <arg name="rviz_tutorial" default="false" />

    <node pkg="tf" type="static_transform_publisher" name="virtual_joint_broadcaster_0"
          args="0 0 0 0 0 0 odom_combined base_footprint 100" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
    </node>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
          respawn="true" output="screen" />

    <include file="$(dirname)/$(arg robot_type)/move_group.launch">
      <arg name="allow_trajectory_execution" value="true"/>
      <arg name="fake_execution" value="true"/>
      <arg name="info" value="true"/>
    </include>

    <include file="$(dirname)/common/moveit_rviz.launch" if="$(arg use_rviz)">
      <arg name="rviz_tutorial" value="$(arg rviz_tutorial)"/>
      <arg name="rviz_config" value="$(dirname)/rviz/moveit.rviz"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>

    <include file="(dirname)/common/default_warehouse_db.launch" if="$(arg db)"/>
  </group>

  <!-- ============================= -->
  <!-- Section Panda -->
  <!-- ============================= -->
  <group if="$(eval arg('robot_type') == 'panda')">

    <arg name="arm_id" default="panda" />
    <arg name="pipeline" default="ompl" />

        <!-- Options communes -->
    <arg name="db" default="false" />
    <arg name="db_path" default="$(find moveit_planning)/default_warehouse_mongo_db" />
    
    <arg name="debug" default="false" />
    <arg name="load_gripper" default="true" />
    <arg name="load_robot_description" default="true"/>
    <arg name="moveit_controller_manager" default="fake" />
    <arg name="fake_execution_type" default="interpolate" />
    <arg name="transmission" />

    <arg name="use_rviz" default="true" />
    <arg name="use_gui" default="false" />
    <arg name="rviz_tutorial" default="false" />


    <!--arg name="rviz_config" default="$(find moveit_planning)/launch/demo/rviz/moveit.rviz"-->

    <!-- TF root -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0"
          args="0 0 0 0 0 0 world $(arg arm_id)_link0" />

    <!-- fake controllers -->
    <group if="$(eval arg('moveit_controller_manager') == 'fake')">
      <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
      </node>
      <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
        <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
      </node>
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
            respawn="true" output="screen" />
    </group>

    <include file="$(dirname)/$(arg robot_type)/move_group.launch" pass_all_args="true">
      <arg name="allow_trajectory_execution" value="true" />
      <arg name="info" value="true" />
    </include>

    <include file="$(dirname)/common/moveit_rviz.launch" if="$(arg use_rviz)">
      <arg name="rviz_tutorial" value="$(arg rviz_tutorial)"/>
      <arg name="rviz_config" value="$(dirname)/rviz/moveit.rviz"/>
      <arg name="debug" value="$(arg debug)"/>
    </include>

    <include file="$(dirname)/common/default_warehouse_db.launch" if="$(arg db)">
      <arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
    </include>
  </group>

</launch>
